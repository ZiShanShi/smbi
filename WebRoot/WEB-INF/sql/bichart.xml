<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql PUBLIC "sql" "../config/sql.dtd" >

<sqls>
	<dataSpace name="bichart">

		<sql name="getAdminTarget">

		</sql>
		<sql name="getLastDataTime">
			SELECT top 1 BizDate from @{DDITable} ORDER BY BizDate desc

		</sql>

		<sql name="getGaugeAchieve">
			SELECT
			sum(monthsum) as sumdata, sum(monthTarget) as target , (ISNULL(sum(monthsum), 0) * 100/ ISNULL(sum(monthTarget), 1)) as achieve
			from VIEW_@{dataType}_Month_@{brandType} m
			LEFT JOIN md_peroid p on m.peroid = p.id
			WHERE @{filter}
			@{targetuser}

		</sql>

		<sql name="getMonthAchieve">
			SELECT
			MONTH,
			ISNULL(SUM(monthsum), 0) AS sumdata,
			ISNULL(SUM(monthTarget), 0) AS target,
			(
			ISNULL(SUM(monthsum), 0) * 100 / ISNULL(SUM(monthTarget), 1)
			) AS achieve
			FROM
			md_peroid p
			LEFT JOIN VIEW_@{dataType}_Month_@{brandType} m ON m.peroid = p.id
			WHERE
			YEAR = @{year}
			@{targetuser}
			GROUP BY
			p.[month]
			ORDER BY
			[month]

		</sql>


		<sql name="brandbak">
			SELECT *,
			(achieve - preachieve) * 100/ CASE WHEN preachieve = 0 THEN 1 ELSE preachieve END  as growth

			from (
			SELECT
			a01.Brand,
			SUM (monthsum) AS sumdata,
			SUM (monthTarget) AS target,
			SUM (presum) AS presumdata,
			SUM (pretarget) AS pretarget,
			(
			ISNULL(SUM(monthsum), 0) * 100 / ISNULL(SUM(monthTarget), 1)
			) AS achieve,
			(
			ISNULL(SUM(presum), 0) * 100 / ISNULL(SUM(pretarget), 1)
			) AS preachieve

			from(
			SELECT
			Brand, m.@{datatypecode}, p.monthno, monthsum, monthTarget
			from @{tableName} m
			LEFT JOIN md_peroid p on p.id = m.peroid
			where @{filter}
			)a01
			LEFT JOIN
			(
			SELECT　@{datatypecode},monthno, monthsum as presum　, monthTarget as pretarget  from @{tableName} m
			LEFT JOIN md_peroid p on p.id = m.peroid
			)a02 on a01.@{datatypecode} = a02.@{datatypecode} and a01.monthno = a02.monthno + 12
			GROUP BY a01.Brand
			) total

		</sql>

		<sql name="getRegionGrowrthAmount">
			SELECT a0.region, sum(Amount) as Amoumt , sum(preAmount) as preAmount, sum(Amount) - sum(preAmount)  as added  from (
			SELECT monthno, region, sum(Amount) as Amount from agg_Purchase_o_pe_pr_r agg
			LEFT JOIN md_peroid p on p.id = agg.peroid
			WHERE aggcode = '@{aggcode}' and
			@{filter}
			@{user}
			GROUP BY monthno, region
			) a0
			LEFT JOIN
			(
			SELECT monthno, region, sum(Amount) as preAmount from agg_Purchase_o_pe_pr_r agg
			LEFT JOIN md_peroid p on p.id = agg.peroid
			WHERE aggcode = '@{aggcode}' and
			@{filter}
			@{user}
			GROUP BY monthno, region
			)a1 on a0.region = a1.region and a0.monthno = a1.monthno + 12
			WHERE a0.region is not null
			GROUP BY a0.region
		</sql>

		<sql name="getBrandAchieve">
			SELECT a01.Brand, a01.sumdata, a02.presumdata, a01.target ,a01.achieve ,
			(sumdata - presumdata) * 100/ CASE WHEN presumdata = 0 THEN 1 ELSE presumdata END  as growth
			from (
			SELECT
			Brand,
			p.year,
			SUM (monthsum) AS sumdata,
			SUM (monthTarget) AS target,
			(ISNULL(SUM(monthsum), 0) * 100 / ISNULL(SUM(monthTarget), 1)
			) AS achieve
			FROM
			@{tableName} m
			LEFT JOIN md_peroid p ON p.id = m.peroid
			WHERE
			@{filter}
			GROUP BY brand, [year]
			)a01
			LEFT JOIN
			(
			SELECT
			Brand,

			p.year,
			SUM (monthsum) AS presumdata,
			SUM (monthTarget) AS pretarget,
			(
			ISNULL(SUM(monthsum), 0) * 100 / ISNULL(SUM(monthTarget), 1)
			) AS preachieve
			FROM
			@{tableName} m
			LEFT JOIN md_peroid p ON p.id = m.peroid

			GROUP BY brand, [year]
			) a02
			on a01.Brand = a02.Brand  and a01.year = a02.year + 1


		</sql>

		<sql name="getAreaAchieve">
			SELECT a01.Region, sumdata,presumdata, target,achieve,
			(sumdata - presumdata) * 100/ CASE WHEN presumdata = 0 THEN 1 ELSE presumdata END  as growth
			from (
			SELECT
			r.Region,
			[year],
			SUM (monthsum) AS sumdata,
			SUM (monthTarget) AS target,
			(
			ISNULL(SUM(monthsum), 0) * 100 / ISNULL(SUM(monthTarget), 1)
			) AS achieve
			FROM
			RSMRegion r
			@{organizationJoin}
			LEFT JOIN md_peroid p ON m.peroid = p.id
			WHERE
			@{filter}
			AND r.Region IS NOT NULL
			AND p.id IS NOT NULL
			GROUP BY
			r.Region,[year]
			)a01
			LEFT JOIN
			(
			SELECT
			r.Region,
			[year],
			SUM (monthsum) AS presumdata,
			SUM (monthTarget) AS pretarget,
			(
			ISNULL(SUM(monthsum), 0) * 100 / ISNULL(SUM(monthTarget), 1)
			) AS preachieve
			FROM
			RSMRegion r
			@{organizationJoin}
			LEFT JOIN md_peroid p ON m.peroid = p.id
			WHERE
			r.Region IS NOT NULL
			AND p.id IS NOT NULL
			GROUP BY
			r.Region,[year]
			)a02 on a01.Region = a02.Region and a01.[year] = a02.[year] + 1

		</sql>

		<sql name="getAreaAchieveBak">
			SELECT * , (achieve - preachieve) * 100/ CASE WHEN preachieve = 0 THEN 1 ELSE preachieve END  as growth from (
			SELECT
			Region,
			sum(monthsum) as sumdata,
			sum(monthTarget) as target ,
			sum(presum) as presumdata,
			sum(pretarget) as pretarget ,
			(ISNULL(sum(monthsum), 0) * 100/ ISNULL(sum(monthTarget), 1)) as achieve,
			(ISNULL(sum(presum), 0) * 100/ ISNULL(sum(pretarget), 1)) as preachieve
			from (

			SELECT
			r.Region, m.@{datatypecode}, p.id,monthsum,monthTarget,p.monthno
			from RSMRegion r
			@{organizationJoin}

			LEFT JOIN md_peroid p on m.peroid = p.id

			WHERE  @{filter} and r.Region is not null and p.id is not null
			)a01
			LEFT JOIN
			(
			SELECT monthsum as presum,monthTarget as pretarget,p.monthno as premonthno, m.@{datatypecode} as @{datatypecode}
			from @{tableName} m
			LEFT JOIN md_peroid p on m.peroid = p.id
			) a02 on a01.@{datatypecode} = a02.@{datatypecode} and a01.monthno = a02.premonthno + 12
			group by Region
			) alldata
		</sql>

		<sql name="getCompanySum">
			<![CDATA[
			SELECT
			top 10

			 a01.CompanyName, a01.Amount, preAmount from (
					SELECT
					YEAR,
				agg.CompanyCode,
				b.CompanyName,
				SUM (Amount) AS Amount
					FROM
					agg_Sale_c_o_pe_pr agg
					LEFT JOIN md_peroid a ON agg.peroid = a.id
					LEFT JOIN Company b ON agg.CompanyCode = b.Companycode
					WHERE
					aggcode = '@{aggcode}'
					and @{filter}
					@{user}
			GROUP BY
				YEAR,
				agg.CompanyCode,
			b.CompanyName
			)a01
			LEFT JOIN(
			SELECT
							YEAR,
				agg.CompanyCode,
				SUM (Amount) AS preAmount
					FROM
						agg_Sale_c_o_pe_pr agg
					LEFT JOIN md_peroid a ON agg.peroid = a.id
					LEFT JOIN Company b ON agg.CompanyCode = b.Companycode
					WHERE
						aggcode = '@{aggcode}'
			GROUP BY
				YEAR,
			b.CompanyName,
				agg.CompanyCode
			) a02  on a01.CompanyCode = a02.CompanyCode and a01.year = a02.year + 1
			ORDER BY Amount desc
			]]>

		</sql>
		<sql name="getDsoAmount">
			SELECT
			TOP 10
			a01.terminalname,
			a01.Amount,
			preAmount
			FROM
			(
			SELECT
			YEAR,
			terminalname,
			SUM (Amount) AS Amount
			FROM
			agg_Sale_c_o_pe_pr agg
			LEFT JOIN md_peroid a ON agg.peroid = a.id
			LEFT JOIN Company b ON agg.CompanyCode = b.Companycode
			LEFT JOIN LargeDSO l on b.Family = l.terminalname
			WHERE
			aggcode = '@{aggcode}'
			AND @{filter}
			@{user}
			and terminalname is not null
			GROUP BY
			YEAR,
			terminalname
			) a01
			LEFT JOIN (
			SELECT
			YEAR,
			terminalname,
			SUM (Amount) AS preAmount
			FROM
			agg_Sale_c_o_pe_pr agg
			LEFT JOIN md_peroid a ON agg.peroid = a.id
			LEFT JOIN Company b ON agg.CompanyCode = b.Companycode
			LEFT JOIN LargeDSO l on b.Family = l.terminalname
			WHERE
			aggcode = '@{aggcode}'
			GROUP BY
			YEAR,

			terminalname
			) a02 ON a01.terminalname = a02.terminalname
			AND a01. YEAR = a02. YEAR + 1
			ORDER BY Amount desc
		</sql>
		<sql name="getai">
			SELECT a01.Region, Quantity, preQuantity,
			ISNULL(Quantity, 0) / ISNULL(preQuantity, 1) AS rate
			FROM(
			SELECT
			Region,  SUM(Quantity) AS Quantity
			FROM (
			SELECT
			Region, peroid,SUM(Quantity) AS Quantity,pr.brand
			FROM agg_@{dataType}_d_o_pe_pr agg
			LEFT JOIN DistributorHierarchy h ON h.DistributorCode = agg.DistributorCode
			LEFT JOIN Product pr ON agg.ProductCode = pr.ProductCode
			WHERE aggcode = '@{aggcode}' @{user}
			AND pr.ProductType LIKE '%Abutment%'
			AND Region IS NOT NULL
			GROUP BY Region, peroid, pr.brand
			) a0
			LEFT JOIN md_peroid p ON p.id = a0.peroid
			where @{filter}
			GROUP BY Region,brand
			)a01
			LEFT JOIN
			(
			SELECT
			Region,  SUM(Quantity) AS preQuantity
			FROM (
			SELECT
			Region, peroid,SUM(Quantity) AS Quantity,pr.brand
			FROM agg_@{dataType}_d_o_pe_pr agg
			LEFT JOIN DistributorHierarchy h ON h.DistributorCode = agg.DistributorCode
			LEFT JOIN Product pr ON agg.ProductCode = pr.ProductCode
			WHERE aggcode = '@{aggcode}' @{user}
			AND pr.ProductType LIKE '%implant%'
			AND Region IS NOT NULL
			GROUP BY Region, peroid, pr.brand
			) a0
			LEFT JOIN md_peroid p ON p.id = a0.peroid
			where @{filter}
			GROUP BY Region,brand
			)
			a02 ON a01.Region = a02.Region

		</sql>
		<sql name="getaibak">
			SELECT a01.Region, Quantity, preQuantity,
			ISNULL(Quantity, 0) / ISNULL(preQuantity, 1) as rate
			from(
			SELECT
			Region, sum(Quantity) AS Quantity
			from agg_@{dataType}_d_pe_pr agg
			LEFT JOIN DistributorHierarchy h on h.DistributorCode = agg.DistributorCode
			LEFT JOIN md_peroid p on p.id = agg.peroid
			WHERE aggcode = 'DistributorCode-peroid-productType'
			and ProductType like '%Abutment%'
			and Region is not null
			and @{filter}
			GROUP BY Region
			)a01
			LEFT JOIN
			(
			SELECT
			Region,sum(Quantity) AS preQuantity
			from agg_@{dataType}_d_pe_pr agg
			LEFT JOIN DistributorHierarchy h on h.DistributorCode = agg.DistributorCode
			LEFT JOIN md_peroid p on p.id = agg.peroid
			WHERE aggcode = 'DistributorCode-peroid-productType'
			and ProductType like '%implant%'
			and Region is not null
			and @{filter}
			GROUP BY Region
			)
			a02 on a01.Region = a02.Region

		</sql>

		<sql name="getDistributorAchieve">
			SELECT dis.DistributorName, a01.sumdata, a02.presumdata, a01.target ,a01.achieve ,
			(sumdata - presumdata) * 100/ CASE WHEN presumdata = 0 THEN 1 ELSE presumdata END  as growth
			from (
			SELECT
			m.DistributorCode,
			p.year,
			SUM (monthsum) AS sumdata,
			SUM (monthTarget) AS target,
			(ISNULL(SUM(monthsum), 0) * 100 / ISNULL(SUM(monthTarget), 1)
			) AS achieve
			FROM
			@{tableName} m
			LEFT JOIN md_peroid p ON p.id = m.peroid
			LEFT JOIN DistributorHierarchy h on m.DistributorCode = h.DistributorCode
			WHERE
			@{filter}
			GROUP BY m.DistributorCode, [year]
			)a01
			LEFT JOIN
			(
			SELECT
			m.DistributorCode,

			p.year,
			SUM (monthsum) AS presumdata,
			SUM (monthTarget) AS pretarget,
			(
			ISNULL(SUM(monthsum), 0) * 100 / ISNULL(SUM(monthTarget), 1)
			) AS preachieve
			FROM
			@{tableName} m
			LEFT JOIN md_peroid p ON p.id = m.peroid

			GROUP BY m.DistributorCode, [year]
			) a02
			on a01.DistributorCode = a02.DistributorCode  and a01.year = a02.year + 1
			LEFT JOIN Distributor dis on dis.DistributorCode = a01.DistributorCode

		</sql>


		<sql name="getsellinout">
			SELECT  a0.[month], sum(sellout) as sellout, sum(sellin) as sellin, sum(sellout) / sum(sellin) as rate
			from (
			SELECT [month], DistributorCode, sum(Amount) as sellout from  md_peroid p
			LEFT JOIN agg_Sale_d_o_pe_pr saleagg on p.id = saleagg.peroid
			WHERE aggcode = '@{aggcode}'
			and year  = '@{year}' @{user}
			GROUP BY [month], DistributorCode
			)a0

			LEFT JOIN
			(
			SELECT [month], DistributorCode, sum(Amount) as sellin from  md_peroid p
			LEFT JOIN agg_Purchase_d_o_pe_pr saleagg on p.id = saleagg.peroid
			WHERE aggcode = '@{aggcode}'
			and year  = '@{year}' @{user}
			GROUP BY [month], DistributorCode
			)a1
			on a0.month = a1.month and a0.DistributorCode = a1.DistributorCode
			GROUP BY a0.month
			ORDER BY a0.month
		</sql>

		<sql name="getAverageAccount">
			<![CDATA[
			SELECT sum(account)/count(1) as averageAccount  from
			(
			SELECT [year], DistributorCode, sum(monthaccount) as  account
			from (
			SELECT
			p.[year], agg.DistributorCode, agg.CompanyCode, ((Amount * AccountTargets.Target) / a0.totalAmount)  as monthaccount

			from agg_Sale_c_d_o_pe agg
			LEFT JOIN md_peroid p on p.id = agg.peroid
			LEFT JOIN AccountTargets on AccountTargets.[Year] = p.[year] and AccountTargets.terminalcode = agg.CompanyCode

			LEFT JOIN

			(
			SELECT [year],DistributorCode, CompanyCode,SUM(Amount) as totalAmount from agg_Sale_c_d_o_pe agg
			LEFT JOIN md_peroid p on p.id = agg.peroid
			WHERE aggcode = '@{aggcode}'
			GROUP BY [year],DistributorCode, CompanyCode
			)a0 on a0.[Year] = p.[year] and a0.CompanyCode = agg.CompanyCode and a0.DistributorCode = agg.DistributorCode

			WHERE agg.aggcode = '@{aggcode}'  @{user}
			and AccountTargets.Target is not null
			and a0.totalAmount is not null and a0.totalAmount <> 0
			)a01
			GROUP BY a01.[year], a01.DistributorCode
			) a11

			WHERE a11.year = '@{year}' @{user}
			GROUP BY a11.[year];

			]]>
		</sql>

		<sql name="getAverageAccountDetail">
			<![CDATA[
			SELECT sum(account) as account, DistributorName  from
			(
			SELECT [year], DistributorCode, sum(monthaccount) as  account
			from (
			SELECT
			p.[year], agg.DistributorCode, agg.CompanyCode, ((Amount * AccountTargets.Target) / a0.totalAmount)  as monthaccount

			from agg_Sale_c_d_o_pe agg
			LEFT JOIN md_peroid p on p.id = agg.peroid
			LEFT JOIN AccountTargets on AccountTargets.[Year] = p.[year] and AccountTargets.terminalcode = agg.CompanyCode

			LEFT JOIN

			(
			SELECT [year],DistributorCode, CompanyCode,SUM(Amount) as totalAmount from agg_Sale_c_d_o_pe agg
			LEFT JOIN md_peroid p on p.id = agg.peroid
			WHERE aggcode = '@{aggcode}'
			GROUP BY [year],DistributorCode, CompanyCode
			)a0 on a0.[Year] = p.[year] and a0.CompanyCode = agg.CompanyCode and a0.DistributorCode = agg.DistributorCode

			WHERE agg.aggcode = '@{aggcode}' @{user}
			and AccountTargets.Target is not null
			and a0.totalAmount is not null and a0.totalAmount <> 0
			)a01
			GROUP BY a01.[year], a01.DistributorCode
			) a11
			LEFT JOIN Distributor d on d.DistributorCode = a11.DistributorCode
			WHERE a11.year = '@{year}' @{user}
			GROUP BY a11.[year], DistributorName;

			]]>

		</sql>

		<sql name="getinventoryday">

			SELECT sum(Amount) / sum(averageAmount) * count(1) as averageinventoryday from
			agg_Inventory_d_o_pe_pr  i
			LEFT JOIN
			(
			SELECT DistributorCode, brand, sum(Amount)/90 as averageAmount  from VIEW_DataSales
			WHERE bizdate >=DATEADD(D,0,DATEDIFF(D,0,'@{lastinventorydate}')-90)
			GROUP BY DistributorCode, brand
			)a1
			on
			i.DistributorCode = a1.DistributorCode and i.brand = a1.brand
			LEFT JOIN Distributor d on i.DistributorCode = d.DistributorCode
			WHERE i.aggcode = '@{aggcode}'  and i.BizDate = '@{lastinventorydate}' @{user}

		</sql>

		<sql name="getinventorydaydetail">

			SELECT DistributorName, sum(Amount) / sum(averageAmount) as inventoryday from
			agg_Inventory_d_o_pe_pr  i
			LEFT JOIN
			(
			SELECT DistributorCode, brand, sum(Amount)/90 as averageAmount  from VIEW_DataSales
			WHERE bizdate >=DATEADD(D,0,DATEDIFF(D,0,'@{lastinventorydate}')-90)
			GROUP BY DistributorCode, brand
			)a1
			on
			i.DistributorCode = a1.DistributorCode and i.brand = a1.brand
			LEFT JOIN Distributor d on i.DistributorCode = d.DistributorCode
			WHERE i.aggcode = '@{aggcode}'  and i.BizDate = '@{lastinventorydate}' @{user}

			GROUP BY d.DistributorName
			ORDER BY inventoryday desc

		</sql>



		<sql name="getCompanyCountAmount">
			SELECT

			ProvinceName, count(1) as num, sum(Amount) as Amount
			from
			(

			SELECT agg.CompanyCode, @{userType}, sum(Amount) as Amount
			FROM [dbo].[agg_Sale_c_o_pe_pr] agg

			LEFT JOIN md_peroid p on p.id = agg.peroid

			WHERE aggcode = '@{aggcode}' and agg.CompanyCode is not null
			@{user}
			@{filter}

			GROUP BY agg.CompanyCode, @{userType}
			) a0
			LEFT JOIN Company c on c.CompanyCode = a0.CompanyCode

			GROUP BY ProvinceName


		</sql>

		<sql name="getTeamAchieve">

			SELECT
			sum(monthsum) as sumdata, SUM(monthTarget) as target,
			sum(monthsum) * 100/ SUM(monthTarget) as achieve
			from(
			SELECT * from
			organization WHERE ParentLoginName = '@{userid}'
			)a0
			LEFT JOIN VIEW_@{dataType}_Month_Total m on (@{dataTypeSegment})
			LEFT JOIN md_peroid p on p.id = m.peroid
			WHERE @{filter} and monthTarget is not null

		</sql>


		<sql name="getTeamAchieveDetail">

			SELECT
			usr.EnglishName as name,
			sum(monthsum) as sumdata, SUM(monthTarget) as target,
			sum(monthsum) * 100/ SUM(monthTarget) as achieve
			from(
			SELECT * from
			organization o WHERE ParentLoginName = '@{userid}'
			)a0

			LEFT JOIN VIEW_@{dataType}_Month_Total m on (@{dataTypeSegment})
			LEFT JOIN md_peroid p on p.id = m.peroid
			LEFT JOIN usr on usr.LoginName = a0.loginName
			WHERE @{filter} and monthTarget is not null
			group by usr.EnglishName
		</sql>

		<sql name="companycount">
			SELECT a01.brand, count(a01.CompanyCode) as num, count(a02.CompanyCode) as prenum ,  count(a01.CompanyCode)  - count(a02.CompanyCode) as new
			, overlap = (
			SELECT count(1) from (
			SELECT ag.CompanyCode from agg_Sale_c_o_pe_pr_r ag
			LEFT JOIN md_peroid p on p.id = ag.peroid
			LEFT JOIN Company c on c.CompanyCode = ag.CompanyCode
			WHERE aggcode = 'brand-CompanyCode-peroid-region-RSM'
			and [year] = @{year}
			@{onlyuser}
			@{countfilter}
			and ag.brand = 'Anthogyr'
			INTERSECT
			SELECT ag.CompanyCode from agg_Sale_c_o_pe_pr_r ag
			LEFT JOIN md_peroid p on p.id = ag.peroid
			LEFT JOIN Company c on c.CompanyCode = ag.CompanyCode
			WHERE aggcode = 'brand-CompanyCode-peroid-region-RSM'
			and [year] = @{year}
			@{onlyuser}
			@{countfilter}
			and ag.brand = 'Straumann'
			) a22
			)

			from (
			SELECT
			brand, agg.CompanyCode

			FROM [dbo].[agg_Sale_c_o_pe_pr_r] agg
			LEFT JOIN md_peroid p on p.id = agg.peroid
			LEFT JOIN Company c on c.CompanyCode = agg.CompanyCode
			WHERE aggcode = 'brand-CompanyCode-peroid-region-RSM'
			and [year] = @{year}
			@{onlyuser}
			@{countfilter}

			GROUP BY brand,agg.CompanyCode
			)a01

			LEFT JOIN
			(
			SELECT
			brand, agg.CompanyCode

			FROM [dbo].[agg_Sale_c_o_pe_pr_r] agg
			LEFT JOIN md_peroid p on p.id = agg.peroid
			LEFT JOIN Company c on c.CompanyCode = agg.CompanyCode
			WHERE aggcode = 'brand-CompanyCode-peroid-region-RSM'
			and [year] = @{year} - 1
			@{onlyuser}
			@{countfilter}

			GROUP BY brand, agg.CompanyCode
			) a02
			on a01.brand = a02.brand and a02.CompanyCode = a01.CompanyCode
			GROUP BY a01.brand


		</sql>

		<sql name="companycountRegion">
			SELECT a01.region, count(a01.CompanyCode) as num, count(a02.CompanyCode) as prenum ,  count(a01.CompanyCode)  - count(a02.CompanyCode) as new
			, overlap = (
			SELECT count(1) from (
			SELECT ag.CompanyCode from agg_Sale_c_o_pe_pr_r ag
			LEFT JOIN md_peroid p on p.id = ag.peroid
			LEFT JOIN Company c on c.CompanyCode = ag.CompanyCode
			WHERE aggcode = 'brand-CompanyCode-peroid-region-RSM'
			and [year] = @{year}
			@{onlyuser}
			and ag.brand = 'Anthogyr'
			INTERSECT
			SELECT ag.CompanyCode from agg_Sale_c_o_pe_pr_r ag
			LEFT JOIN md_peroid p on p.id = ag.peroid
			LEFT JOIN Company c on c.CompanyCode = ag.CompanyCode
			WHERE aggcode = 'brand-CompanyCode-peroid-region-RSM'
			and [year] = @{year}
			@{onlyuser}
			and ag.brand = 'Straumann'
			) a22
			)
			,
			total = (
			SELECT
			COUNT (1)
			FROM
			(
			SELECT
			agg.CompanyCode
			FROM
			[dbo].[agg_Sale_c_o_pe_pr_r] agg
			LEFT JOIN md_peroid p ON p.id = agg.peroid
			LEFT JOIN Company c ON c.CompanyCode = agg.CompanyCode
			WHERE
			aggcode = 'brand-CompanyCode-peroid-region-RSM'
			and [year] = @{year}
			@{onlyuser}
			@{brandfilter}
			GROUP BY
			agg.CompanyCode
			) a23
			),
			target = (
			SELECT
			SUM (target)
			FROM
			TerminalTargets
			WHERE
			[year] = @{year}
			@{onlyuser}
			@{brandfilter}
			)

			from (
			SELECT
			region, agg.CompanyCode

			FROM [dbo].[agg_Sale_c_o_pe_pr_r] agg
			LEFT JOIN md_peroid p on p.id = agg.peroid
			LEFT JOIN Company c on c.CompanyCode = agg.CompanyCode
			WHERE aggcode = 'brand-CompanyCode-peroid-region-RSM'
			and [year] = @{year}
			@{onlyuser}
			@{brandfilter}

			GROUP BY region,agg.CompanyCode
			)a01

			LEFT JOIN
			(
			SELECT
			region, agg.CompanyCode

			FROM [dbo].[agg_Sale_c_o_pe_pr_r] agg
			LEFT JOIN md_peroid p on p.id = agg.peroid
			LEFT JOIN Company c on c.CompanyCode = agg.CompanyCode
			WHERE aggcode = 'brand-CompanyCode-peroid-region-RSM'
			and [year] = @{year} - 1
			@{onlyuser}
			@{brandfilter}

			GROUP BY region, agg.CompanyCode
			) a02
			on a01.region = a02.region and a02.CompanyCode = a01.CompanyCode
			GROUP BY a01.region

		</sql>

		<sql name="getCompanyProvince">
			SELECT shortname as ProvinceName, count(1) as num, sum(Amount) as Amount from agg_Sale_c_o_pe_pr agg
			LEFT JOIN Company c on agg.CompanyCode = c.CompanyCode
			LEFT JOIN md_peroid p on p.id = agg.peroid
			LEFT JOIN gi_province gi on gi.cnname = ProvinceName
			WHERE aggcode = '@{aggcode}' and
			@{filter}
			@{user}
			GROUP BY shortname


		</sql>

		<!--  agg  -->

		<sql name="aggTarget">
			update @{aggtable}  set @{aggtable}.@{targetName} = m.monthTarget

			from @{aggtable} agg
			LEFT JOIN md_peroid p on agg.peroid = p.id
			LEFT JOIN @{targetTableName} m on
			agg.brand = m.Brand and p.quarter = m.quarter and p.[year] = m.[Year]
			@{tagertjion}

			WHERE
			agg.brand  is not null  and agg.peroid is not null
			@{targetfilter}
			and m.Category = '@{category}'

		</sql>

		<sql name="aggAchieve">
			UPDATE @{aggtable} set @{achieve} = ISNULL(@{account}, 0) * 100 / ISNULL(@{target}, 1)

			from @{aggtable} WHERE @{target} is not null

		</sql>
		<sql name="aggMgrowth">

			UPDATE @{aggtable}  set @{mgrowth} =
			(a0.@{account} - a0.preAccount) * 100/ preAccount
			from(
			SELECT agg.id, agg.@{account}, preAccount,@{aggdimensions} from @{aggtable}  agg
			LEFT JOIN md_peroid p on p.id = agg.peroid

			inner JOIN
			(
			SELECT [monthno],@{dimensions}, @{account} as preAccount from @{aggtable} ag
			LEFT JOIN md_peroid p1 on p1.id = ag.peroid
			) a01
			ON a01.[monthno] + 12 = p.monthno and @{growthjion}
			)
			a0
			WHERE  preAccount is not null

		</sql>


	</dataSpace>
</sqls>
